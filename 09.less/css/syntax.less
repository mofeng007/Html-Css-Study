//less中的单行注释，注释中的内容不会被解析到css中
/*
    css中的注释，内容会被解析到css文件中
*/

/*
    变量，在变量中可以存储一个任意的值
        -并且我们可以在需要时，任意的修改变量中的值
        -变量名发生重名时，会优先使用比较近的变量

    变量的语法：
        @变量名

    使用变量时：
        -如果是直接使用则以 @变量名 的形式即可
        -如果作为类名使用，或者一部分值使用时必须以 @{变量名} 的形式使用
            
*/ 
@a:100px;
@b:red;
@c:box6;

.box1{
    width: @a;
    color: @b;
    background-color: $color;
    height: $width;
    .box2{
        color: @b;
        &:hover{
            background-color: @b;
        }
    }
    /*
      & 表示外层的父元素
    */
    &:hover{
        background-color: @b;
    }
}

.@{c}{
    width: @a;
    background-image: url('@{c}/1.png');
}

.p1{
    width: 100px;
    height: 100px;
}
// :extend()对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.p1){
    color: red;
}

.p3{
    // 直接对指定的样式进行引用，这里就相当于将p1的样式复制到p3
    // mixins 混合函数
    .p1;
}

// 使用类选择器时可以在选择器后边添加一个括号，这时我们实际上就创建了一个mixins,在css中不会显示
.p4(){
    width: 100px;
    height: auto;
}

// 混合函数，在混合函数中可以直接设置变量，使用时给w传一个参数，更灵活（类似java）
.test(@w,@co){
    height: @w;
    width: 200px;
    color: @co;
}

.div{
    // 调用混合函数，按顺序传递，也可以写上名字，就可以不按顺序；eg：@w：130px,@co:#bfa
    .test(200px,#bfa);
    // less还自带了一些函数，average两个颜色取平均值
    background-color: average(red,yellow);
}